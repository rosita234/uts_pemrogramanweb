<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Register</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
  <style>
    body {
      background-color: #f8f9fa;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }
    .register-container {
      width: 100%;
      max-width: 400px;
    }
    .card {
      border-radius: 10px;
      box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    }
    .btn-primary {
      background-color: #007bff;
      border: none;
    }
    .btn-primary:hover {
      background-color: #0056b3;
    }
  </style>
</head>
<body>

  <div class="register-container">
    <div class="card p-4">
      <h3 class="text-center mb-3">Register</h3>
      <form id="registerForm">
        <div class="mb-3">
          <input type="text" name="username" placeholder="Username" required class="form-control">
        </div>
        <div class="mb-3">
          <input type="password" name="password" placeholder="Password" required class="form-control">
        </div>
        <button type="submit" class="btn btn-primary w-100">Register</button>
      </form>
      <p class="text-center mt-3">Already have an account? <a href="/api/auth/login">Login here</a></p>
    </div>
  </div>

  <!-- Toast Notification -->
  <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
    <div id="registerToast" class="toast align-items-center text-bg-success border-0 shadow" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="d-flex">
        <div class="toast-body" id="toastMessage">Registered successfully!</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
    </div>
  </div>

  <script>
    // WebSocket Connection
    const socket = new WebSocket("ws://localhost:3000/socket");

    socket.onopen = function() {
      console.log("WebSocket connected.");
    };

    socket.onmessage = function(event) {
      console.log("WebSocket Message:", event.data);
      document.getElementById("toastMessage").innerText = event.data;
      const toastElement = new bootstrap.Toast(document.getElementById("registerToast"));
      toastElement.show();
    };

    socket.onclose = function() {
      console.log("WebSocket connection closed.");
    };

    // Handle Register Form Submission
    document.getElementById("registerForm").addEventListener("submit", async function(event) {
      event.preventDefault();

      const username = document.querySelector("input[name='username']").value;
      const password = document.querySelector("input[name='password']").value;

      try {
        const response = await fetch("/api/auth/register", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ username, password })
        });

        const data = await response.json();
        console.log("Registration Response:", data);

        if (response.ok) {
          socket.send("User registered successfully!");

          // Show Success Toast
          document.getElementById("toastMessage").innerText = "Registered successfully!";
          const toastElement = new bootstrap.Toast(document.getElementById("registerToast"));
          toastElement.show();

          // Redirect to login after 3 seconds
          setTimeout(() => {
            window.location.href = "/api/auth/login";
          }, 3000);
        } else {
          socket.send("User registration failed: " + data.message);
          alert(data.message);
        }
      } catch (error) {
        console.error("Registration error:", error);
        alert("An error occurred. Please try again.");
      }
    });
  </script>

</body>
</html>
