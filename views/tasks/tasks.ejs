<!DOCTYPE html>
<html>
  <head>
    <title>Tasks</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.0/animate.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
  </head>
  <body>
    <h2>Your Tasks</h2>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalAddTask">Add New Task</button>

    <!-- Table for Tasks -->
    <table class="table table-bordered mt-3">
      <thead>
        <tr>
          <th>Title</th>
          <th>Description</th>
          <th>Status</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody id="taskList">
        <!-- Tasks dynamically loaded here by loadTasks() -->
      </tbody>
    </table>

    <!-- Add Task Modal -->
    <div class="modal fade" id="modalAddTask" tabindex="-1">
      <div class="modal-dialog">
          <div class="modal-content">
              <div class="modal-header">
                  <h5 class="modal-title">Add Task</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
              </div>
              <form id="addTaskForm">
                <div class="modal-body">
                  <p class="text-start mb-1">Title</p>
                  <input id="title" name="title" type="text" class="form-control mb-2" placeholder="Add Task Title Here" required>
                  <p class="text-start mb-1">Description</p>
                  <input id="description" name="description" type="text" class="form-control mb-2" placeholder="Describe what the task is about" required>
                </div>
                <div class="modal-footer">
                  <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                  <button type="submit" class="btn btn-primary">Add Task</button>
                </div>
              </form>
          </div>
      </div>
    </div>

    <script>
      // Helper Function to Get Token from LocalStorage
      const getToken = () => {
        const token = localStorage.getItem("token");
        console.log("Token Sent:", token); // ✅ Debug Token
        return token;
      };

      // Handle Task Form Submission
      document.getElementById("addTaskForm").addEventListener("submit", async function(event) {
        event.preventDefault();

        const title = document.getElementById("title").value;
        const description = document.getElementById("description").value;

        try {
          const response = await fetch("/api/tasks", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              "Authorization": `Bearer ${getToken()}`
            },
            body: JSON.stringify({ title, description })
          });

          const data = await response.json();
          console.log("Task Creation Response:", data);

          if (response.ok) {
            alert("Task added successfully!");

            // ✅ Close Modal
            const modalElement = document.querySelector('#modalAddTask');
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            modalInstance.hide();

            // ✅ Clear Form Fields
            document.getElementById("title").value = "";
            document.getElementById("description").value = "";

            // ✅ Reload Tasks
            loadTasks();
          } else {
            alert("Failed to add task: " + (data.message || "Unknown error"));
          }
        } catch (error) {
          console.error("Failed to create task:", error);
          alert("An error occurred while creating the task.");
        }
      });

      // Fetch Tasks and Populate the Table
      const loadTasks = async () => {
        try {
          const response = await fetch("/api/tasks", {
            method: "GET",
            headers: {
              "Content-Type": "application/json",
              "Authorization": `Bearer ${getToken()}`
            }
          });

          if (response.ok) {
            const tasks = await response.json();
            console.log("Tasks Array:", tasks); // Check if tasks is an array

            // Display Tasks on Page (in Table)
            const taskList = document.getElementById("taskList");
            taskList.innerHTML = ""; // Clear the existing tasks

            tasks.forEach(task => {
              taskList.innerHTML += `
                <tr>
                  <td>${task.title}</td>
                  <td>${task.description}</td>
                  <td>
                    ${task.completed 
                      ? '<span class="badge bg-success">Completed</span>' 
                      : '<span class="badge bg-warning">Pending</span>'}
                  </td>
                  <td>
                    <button class="btn btn-danger btn-sm" onclick="deleteTask('${task.id}')">
                      <i class="bi bi-pencil"></i> Edit
                    </button>
                    <button class="btn btn-danger btn-sm" onclick="deleteTask('${task.id}')">
                      <i class="bi bi-trash"></i> Delete
                    </button>
                  </td>
                </tr>
              `;
            });
          } else {
            alert("Access denied. Please log in.");
            window.location.href = "/api/auth/login";
          }
        } catch (error) {
          console.error("Failed to load tasks:", error);
        }
      };

      // Edit Task Function (To be implemented later)
      const editTask = (id) => {
        alert("Edit functionality coming soon! Task ID: " + id);
        // In the future, you would open a modal to edit the task here.
      };

      // Delete Task Function
      const deleteTask = async (id) => {
        if (confirm("Are you sure you want to delete this task?")) {
          try {
            const response = await fetch(`/api/tasks/${id}`, {
              method: "DELETE",
              headers: {
                "Authorization": `Bearer ${getToken()}`
              }
            });

            if (response.ok) {
              alert("Task deleted successfully!");
              loadTasks(); // Reload tasks to reflect changes
            } else {
              alert("Failed to delete task.");
            }
          } catch (error) {
            console.error("Failed to delete task:", error);
            alert("An error occurred while deleting the task.");
          }
        }
      };


      // Call loadTasks on page load
      loadTasks();
    </script>
  </body>
</html>
